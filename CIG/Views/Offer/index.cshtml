@{
    ViewData["Title"] = "Crea Offerta PDF";
    <link rel="stylesheet" href="~/css/offer.css" />

}

<div class="car-configurator">
    <div class="car-selection">
        <div id="step1">
            <div class="car-selection">
                <div class="dropdowns">
                    <select id="marca"></select>
                    <select id="modello"></select>
                    <select id="versione"></select>
                    <select id="variante"></select>
                </div>
                <div class="car-preview">
                    <img id="anteprimaAuto" src="" alt="Anteprima Auto">
                    <div id="imagePlaceholder">Seleziona una variante per visualizzare l'anteprima auto</div>
                </div>
                <div style="margin-top:10px;">
                    <input type="text" id="searchCustomer" placeholder="Cerca cliente">
                    <ul id="customerResults" style="border:1px solid #ccc; padding:5px; max-height:200px; overflow:auto; display:none;"></ul>
                </div>
                <button id="step2Btn" style="display:none; margin-top:10px;">Procedi allo Step 2 →</button>
            </div>

            <div id="serviziDisponibili" style="display:none;">
                <h3>Servizi disponibili</h3>
                <ul id="serviziDisponibili"></ul>
            </div>
        </div>
    </div>
</div>





@section Scripts {
    <script>
        const customerKey = "it-azureautomotive";

        const marcaDropdown = document.getElementById("marca");
        const modelloDropdown = document.getElementById("modello");
        const versioneDropdown = document.getElementById("versione");
        const varianteDropdown = document.getElementById("variante");
        const anteprimaAuto = document.getElementById("anteprimaAuto");

        // Funzione generica per popolare dropdown
        async function fetchDropdown(url, dropdown, keyName) {
            dropdown.innerHTML = '<option value="">Caricamento...</option>';
            dropdown.disabled = true;

            try {
                const response = await fetch(url);
                const data = await response.json();

                dropdown.innerHTML = `<option value="">Seleziona ${keyName}</option>`;
                data.preselect.options[keyName].forEach(item => {
                    const option = document.createElement('option');
                    option.value = item;
                    option.textContent = item.toUpperCase();
                    dropdown.appendChild(option);
                });

                dropdown.disabled = false;
            } catch (error) {
                console.error('Errore nel recupero dati:', error);
                dropdown.innerHTML = `<option value="">Errore caricamento</option>`;
            }
        }

        // Carica marche al caricamento della pagina
        document.addEventListener("DOMContentLoaded", () => {
            fetchDropdown(`https://cdn.imagin.studio/getCarListing?customer=${customerKey}`, marcaDropdown, "make");
        });

        // Eventi collegati per caricare modelli, versioni e varianti
        marcaDropdown.addEventListener("change", () => {
            modelloDropdown.innerHTML = '';
            versioneDropdown.innerHTML = '';
            varianteDropdown.innerHTML = '';
            anteprimaAuto.src = '';

            if (marcaDropdown.value) {
                fetchDropdown(`https://cdn.imagin.studio/getCarListing?customer=${customerKey}&make=${marcaDropdown.value}`, modelloDropdown, "modelFamily");
            }
        });

        modelloDropdown.addEventListener("change", () => {
            versioneDropdown.innerHTML = '';
            varianteDropdown.innerHTML = '';
            anteprimaAuto.src = '';

            if (modelloDropdown.value) {
                fetchDropdown(`https://cdn.imagin.studio/getCarListing?customer=${customerKey}&make=${marcaDropdown.value}&modelFamily=${modelloDropdown.value}`, versioneDropdown, "modelRange");
            }
        });

        versioneDropdown.addEventListener("change", () => {
            varianteDropdown.innerHTML = '';
            anteprimaAuto.src = '';

            if (versioneDropdown.value) {
                fetchDropdown(`https://cdn.imagin.studio/getCarListing?customer=${customerKey}&make=${marcaDropdown.value}&modelFamily=${modelloDropdown.value}&modelRange=${versioneDropdown.value}`, varianteDropdown, "modelVariant");
            }
        });

        // Mostra anteprima immagine auto quando selezioni la variante
                // Quando selezioni la variante finale:
                varianteDropdown.addEventListener("change", () => {
            const loader = document.getElementById("loader");
            loader.style.display = "block";
            anteprimaAuto.style.display = "none";
            imagePlaceholder.style.display = "none";

            if (varianteDropdown.value) {
                const imageUrl = `https://cdn.imagin.studio/getImage?customer=${customerKey}&make=${marcaDropdown.value}&modelFamily=${modelloDropdown.value}&modelRange=${versioneDropdown.value}&modelVariant=${varianteDropdown.value}&angle=203&zoomType=Adaptive&groundPlaneAdjustment=0&fileType=png&width=800`;

                anteprimaAuto.src = imageUrl;
                anteprimaAuto.onload = function(){
                    loader.style.display = "none";
                    anteprimaAuto.style.display = "block";
                };
                anteprimaAuto.onerror = function(){
                    loader.style.display = "none";
                    imagePlaceholder.textContent = "Anteprima non disponibile";
                    imagePlaceholder.style.display = "flex";
                };
            } else {
                loader.style.display = "none";
                imagePlaceholder.textContent = "Seleziona una variante per visualizzare l'anteprima";
                imagePlaceholder.style.display = "flex";
            }
        });


    </script>

    <script>

                const customerInput = document.getElementById('customerInput');
        const customerResults = document.getElementById('customerResults');

        // Recupero del token direttamente dalla URL
        const urlParams = new URLSearchParams(window.location.search);
        const token = urlParams.get('token');

        customerInput.addEventListener('input', function () {
            const query = customerInput.value.trim();

            if (query.length < 3) {
                customerResults.style.display = 'none';
                return;
            }

            fetch('https://coreapi-production-ca29.up.railway.app/customers/clienti', {
                headers: {
                    "Authorization": "Bearer " + token
                }
            })
                    .then(res => res.json())
        .then(clienti => {
            customerResults.innerHTML = '';

            const filteredCustomers = clienti.filter(cliente =>
                (cliente.nome && cliente.nome.toLowerCase().includes(query.toLowerCase())) ||
                (cliente.cognome && cliente.cognome.toLowerCase().includes(query.toLowerCase())) ||
                (cliente.ragione_sociale && cliente.ragione_sociale.toLowerCase().includes(query.toLowerCase())) ||
                (cliente.email && cliente.email.toLowerCase().includes(query.toLowerCase())) ||
                (cliente.telefono && cliente.telefono.includes(query))
            );

                    filteredCustomers.forEach(cliente => {
            const li = document.createElement('li');
            const nomeCompleto = [cliente.nome, cliente.cognome].filter(Boolean).join(' ') || cliente.ragione_sociale;

            li.textContent = nomeCompleto + ' (' + cliente.email + ')';
            li.addEventListener('click', function () {
                customerInput.value = nomeCompleto;
                customerResults.style.display = 'none';

                // ✅ Mostra bottone step 2
                document.getElementById('step2Btn').style.display = 'inline-block';
            });
            customerResults.appendChild(li);
        });


            customerResults.style.display = 'block';
        })

            .catch(error => {
                console.error('Errore:', error);
            });
        });

</script>

<script>
                    document.getElementById('step2Btn').addEventListener('click', () => {
            document.getElementById('step2Btn').style.display = 'none';
            document.getElementById('servicesSection').style.display = 'block';

            const token = new URLSearchParams(window.location.search).get("token");

            fetch('https://coreapi-production-ca29.up.railway.app/nlt/services', {
                headers: {
                    "Authorization": "Bearer " + token
                }
            })
            .then(res => res.json())
            .then(data => {
                const servicesList = document.getElementById('servicesList');
                servicesList.innerHTML = '';

                data.services.forEach(service => {
                    const div = document.createElement('div');
                    div.className = 'service-item';

                    let html = `
                        <label>
                            <input type="checkbox" value="${service.id}">
                            <strong>${service.name}</strong><br>
                            <small>${service.description}</small>
                        </label>
                    `;

                    if (service.conditions && service.conditions.options) {
                        htmlOptions = '<div class="service-options">';
                        service.conditions.options.forEach(option => {
                            htmlOptions += `
                                <label style="margin-right:10px;">
                                    <input type="radio" name="option_${service.id}" value="${option}"> ${option}
                                </label>
                            `;
                        });
                        htmlOptions += '</div>';
                        htmlOptions += '<br>';

                        htmlOptions += '</div>';
                        htmlOptions += '</div>';
                        htmlOptions += '</div>';
                        htmlOptions += '</div>';

                        htmlOptions += '</div>';

                        htmlOptions += '</div>';
                        htmlOptions += '</div>';

                        html += htmlOptions;
                    }

                    div.innerHTML = html;

                    servicesList.appendChild(div);
                });
            })
            .catch(error => {
                document.getElementById('servicesList').textContent = 'Errore caricamento servizi.';
                console.error('Errore:', error);
            });
        });



</script>

}
